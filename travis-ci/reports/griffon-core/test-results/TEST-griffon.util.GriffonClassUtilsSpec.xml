<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="griffon.util.GriffonClassUtilsSpec" tests="238" failures="0" errors="0" timestamp="2014-02-22T19:12:35" hostname="testing-worker-linux-6-1-10096-linux-6-19406446" time="0.507">
  <properties/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResourceValue(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.018"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.002"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.002"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public asResourceBundle()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public resolveMessageValue(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.002"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getMvcGroup()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public mvcGroupInit(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public mvcGroupDestroy()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getGriffonClass()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public getApplication()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public getLog()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isThreadingMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isThreadingMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isThreadingMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isThreadingMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addVetoableChangeListener(java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public getVetoableChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public getVetoableChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removeVetoableChangeListener(java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removeVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.002"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public getGriffonClass()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public getApplication()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public getLog()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.002"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public buildMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <system-out><![CDATA[public resolveResourceValue(java.lang.String, java.util.Locale)
public formatResource(java.lang.String, java.util.Map)
public formatResource(java.lang.String, java.util.List)
public formatResource(java.lang.String, [Ljava.lang.Object;)
public resolveResource(java.lang.String, java.util.Map, java.util.Locale)
public resolveResource(java.lang.String, java.util.Map)
public resolveResource(java.lang.String, java.util.List, java.util.Locale, java.lang.Object)
public resolveResource(java.lang.String, java.util.List, java.lang.Object)
public resolveResource(java.lang.String, java.util.Map, java.lang.Object)
public resolveResource(java.lang.String, java.util.Map, java.util.Locale, java.lang.Object)
public resolveResource(java.lang.String)
public resolveResource(java.lang.String, java.util.List, java.util.Locale)
public resolveResource(java.lang.String, java.util.List)
public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale)
public resolveResource(java.lang.String, [Ljava.lang.Object;)
public resolveResource(java.lang.String, java.util.Locale)
public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.Object)
public resolveResource(java.lang.String, [Ljava.lang.Object;, java.lang.Object)
public resolveResource(java.lang.String, java.util.Locale, java.lang.Object)
public resolveResource(java.lang.String, java.lang.Object)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public runInsideUIAsync(java.lang.Runnable)
public runOutsideUI(java.lang.Runnable)
public runInsideUISync(java.lang.Runnable)
public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)
public runFuture(java.util.concurrent.Callable)
public isUIThread()
public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)
public removeEventListener(java.lang.Object)
public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public removeEventListener(java.util.Map)
public publishEventOutsideUI(java.lang.String)
public publishEventOutsideUI(griffon.core.event.Event)
public publishEventOutsideUI(java.lang.String, java.util.List)
public publishEventAsync(griffon.core.event.Event)
public publishEventAsync(java.lang.String)
public publishEventAsync(java.lang.String, java.util.List)
public setEventPublishingEnabled(boolean)
public isEventPublishingEnabled()
public addEventListener(java.lang.String, griffon.core.CallableWithArgs)
public addEventListener(java.util.Map)
public addEventListener(java.lang.Object)
public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public publishEvent(java.lang.String, java.util.List)
public publishEvent(griffon.core.event.Event)
public publishEvent(java.lang.String)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public asResourceBundle()
public resolveMessageValue(java.lang.String, java.util.Locale)
public formatMessage(java.lang.String, java.util.List)
public formatMessage(java.lang.String, [Ljava.lang.Object;)
public formatMessage(java.lang.String, java.util.Map)
public getMessage(java.lang.String, java.util.Map, java.util.Locale)
public getMessage(java.lang.String, java.util.Map)
public getMessage(java.lang.String, java.util.List, java.util.Locale, java.lang.String)
public getMessage(java.lang.String, java.util.Map, java.lang.String)
public getMessage(java.lang.String, java.util.Map, java.util.Locale, java.lang.String)
public getMessage(java.lang.String)
public getMessage(java.lang.String, java.util.List, java.util.Locale)
public getMessage(java.lang.String, java.util.List)
public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale)
public getMessage(java.lang.String, [Ljava.lang.Object;)
public getMessage(java.lang.String, java.util.Locale)
public getMessage(java.lang.String, java.util.List, java.lang.String)
public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.String)
public getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
public getMessage(java.lang.String, java.util.Locale, java.lang.String)
public getMessage(java.lang.String, java.lang.String)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public buildMVCGroup(java.lang.String)
public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public buildMVCGroup(java.lang.String, java.util.Map)
public buildMVCGroup(java.util.Map, java.lang.String)
public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public buildMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.util.Map, java.lang.String)
public createMVCGroup(java.lang.String)
public createMVCGroup(java.lang.String, java.util.Map)
public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public destroyMVCGroup(java.lang.String)
public getMvcGroup()
public mvcGroupInit(java.util.Map)
public mvcGroupDestroy()
public getGriffonClass()
public getApplication()
public getLog()
public runInsideUIAsync(java.lang.Runnable)
public runOutsideUI(java.lang.Runnable)
public runInsideUISync(java.lang.Runnable)
public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)
public runFuture(java.util.concurrent.Callable)
public isUIThread()
public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public buildMVCGroup(java.lang.String)
public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public buildMVCGroup(java.lang.String, java.util.Map)
public buildMVCGroup(java.util.Map, java.lang.String)
public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public buildMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.util.Map, java.lang.String)
public createMVCGroup(java.lang.String)
public createMVCGroup(java.lang.String, java.util.Map)
public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public destroyMVCGroup(java.lang.String)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)
public removeEventListener(java.lang.Object)
public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public removeEventListener(java.util.Map)
public publishEventOutsideUI(java.lang.String)
public publishEventOutsideUI(griffon.core.event.Event)
public publishEventOutsideUI(java.lang.String, java.util.List)
public publishEventAsync(griffon.core.event.Event)
public publishEventAsync(java.lang.String)
public publishEventAsync(java.lang.String, java.util.List)
public setEventPublishingEnabled(boolean)
public isEventPublishingEnabled()
public addEventListener(java.lang.String, griffon.core.CallableWithArgs)
public addEventListener(java.util.Map)
public addEventListener(java.lang.Object)
public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public publishEvent(java.lang.String, java.util.List)
public publishEvent(griffon.core.event.Event)
public publishEvent(java.lang.String)
public runInsideUIAsync(java.lang.Runnable)
public runOutsideUI(java.lang.Runnable)
public runInsideUISync(java.lang.Runnable)
public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)
public runFuture(java.util.concurrent.Callable)
public isUIThread()
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public addPropertyChangeListener(java.beans.PropertyChangeListener)
public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
public removePropertyChangeListener(java.beans.PropertyChangeListener)
public getPropertyChangeListeners()
public getPropertyChangeListeners(java.lang.String)
public addVetoableChangeListener(java.beans.VetoableChangeListener)
public addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)
public getVetoableChangeListeners(java.lang.String)
public getVetoableChangeListeners()
public removeVetoableChangeListener(java.beans.VetoableChangeListener)
public removeVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)
public addPropertyChangeListener(java.beans.PropertyChangeListener)
public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
public removePropertyChangeListener(java.beans.PropertyChangeListener)
public getPropertyChangeListeners()
public getPropertyChangeListeners(java.lang.String)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public getGriffonClass()
public getApplication()
public getLog()
public runInsideUIAsync(java.lang.Runnable)
public runOutsideUI(java.lang.Runnable)
public runInsideUISync(java.lang.Runnable)
public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)
public runFuture(java.util.concurrent.Callable)
public isUIThread()
public withMVCGroup(java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCCallable)
public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCCallable)
public buildMVCGroup(java.lang.String)
public buildMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public buildMVCGroup(java.lang.String, java.util.Map)
public buildMVCGroup(java.util.Map, java.lang.String)
public buildMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public buildMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.lang.String, java.lang.String)
public createMVCGroup(java.util.Map, java.lang.String)
public createMVCGroup(java.lang.String)
public createMVCGroup(java.lang.String, java.util.Map)
public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)
public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)
public destroyMVCGroup(java.lang.String)
public getResourceAsURL(java.lang.String)
public getResourceAsStream(java.lang.String)
public getResources(java.lang.String)
public classloader()
public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)
public removeEventListener(java.lang.Object)
public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public removeEventListener(java.util.Map)
public publishEventOutsideUI(java.lang.String)
public publishEventOutsideUI(griffon.core.event.Event)
public publishEventOutsideUI(java.lang.String, java.util.List)
public publishEventAsync(griffon.core.event.Event)
public publishEventAsync(java.lang.String)
public publishEventAsync(java.lang.String, java.util.List)
public setEventPublishingEnabled(boolean)
public isEventPublishingEnabled()
public addEventListener(java.lang.String, griffon.core.CallableWithArgs)
public addEventListener(java.util.Map)
public addEventListener(java.lang.Object)
public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)
public publishEvent(java.lang.String, java.util.List)
public publishEvent(griffon.core.event.Event)
public publishEvent(java.lang.String)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
