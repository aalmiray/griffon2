<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="griffon.util.ConfigUtilsSpec" tests="42" failures="0" errors="0" timestamp="2014-02-22T19:12:36" hostname="testing-worker-linux-6-1-10096-linux-6-19406446" time="0.158">
  <properties/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with single gives single" classname="griffon.util.ConfigUtilsSpec" time="0.008"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with key.string gives string" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with key.number gives number" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with single gives single" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with key.string gives string" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with key.number gives number" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class java.util.LinkedHashMap with key gives [string:string, number:number]" classname="griffon.util.ConfigUtilsSpec" time="0.002"/>
  <testcase name="Calling getConfigValue() on class griffon.util.MapResourceBundle with single gives single" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling getConfigValue() on class griffon.util.MapResourceBundle with key.string gives string" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class griffon.util.MapResourceBundle with key.number gives number" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling getConfigValue() on class griffon.util.ExpandableResourceBundle with single gives single" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class griffon.util.ExpandableResourceBundle with key.string gives string" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling getConfigValue() on class griffon.util.ExpandableResourceBundle with key.number gives number" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling getConfigValue() on class griffon.util.ExpandableResourceBundle with key gives [string:string, number:number]" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with single gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key.string gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key.number gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key gives false" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with single gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key.string gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key.number gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class java.util.LinkedHashMap with key gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class griffon.util.MapResourceBundle with single gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class griffon.util.MapResourceBundle with key.string gives true" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Calling isValueDefined() on class griffon.util.MapResourceBundle with key.number gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class griffon.util.MapResourceBundle with key gives false" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class griffon.util.ExpandableResourceBundle with single gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class griffon.util.ExpandableResourceBundle with key.string gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class griffon.util.ExpandableResourceBundle with key.number gives true" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Calling isValueDefined() on class griffon.util.ExpandableResourceBundle with key gives true" classname="griffon.util.ConfigUtilsSpec" time="0.002"/>
  <testcase name="Read Java based configuration[0]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[1]" classname="griffon.util.ConfigUtilsSpec" time="0.002"/>
  <testcase name="Read Java based configuration[2]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[3]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[4]" classname="griffon.util.ConfigUtilsSpec" time="0.002"/>
  <testcase name="Read Java based configuration[5]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[6]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[7]" classname="griffon.util.ConfigUtilsSpec" time="0.0"/>
  <testcase name="Read Java based configuration[8]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[9]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[10]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <testcase name="Read Java based configuration[11]" classname="griffon.util.ConfigUtilsSpec" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
