<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.shiro.ShiroSpec" tests="20" failures="0" errors="0" timestamp="2014-02-18T21:09:41" hostname="testing-worker-linux-9-1-26937-linux-3-19139712" time="7.403">
  <properties/>
  <testcase name="Guest with guest has outcome guest" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="2.597"/>
  <testcase name="Guest with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.349"/>
  <testcase name="Guest with authenticated has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.378"/>
  <testcase name="Guest with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.389"/>
  <testcase name="Guest with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.311"/>
  <testcase name="User bob with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.595"/>
  <testcase name="User bob with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.38"/>
  <testcase name="User bob with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.452"/>
  <testcase name="User bob with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.28"/>
  <testcase name="User bob with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.21"/>
  <testcase name="User joe with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.151"/>
  <testcase name="User joe with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.148"/>
  <testcase name="User joe with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.146"/>
  <testcase name="User joe with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.132"/>
  <testcase name="User joe with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.131"/>
  <testcase name="User root with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.163"/>
  <testcase name="User root with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.136"/>
  <testcase name="User root with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.128"/>
  <testcase name="User root with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.13"/>
  <testcase name="User root with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.128"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@2703469
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1480dabf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@17993c1d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4d39a005
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@f851003, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@68de3cea, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@56715c6f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2c6ba7bf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4fd20361, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@64dbfe37, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@270f009c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@49f115cc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@72ce2a00, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1fdf2925
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No identity (PrincipalCollection) found in the context.  Looking for a remembered identity.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No remembered identity found.  Returning original context.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@18def165
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@54ba2aa4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@a45a071
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@61285ffb
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b0d6ca2.after() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@be5214b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@6fecc906
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2281e252
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7d318730
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@ad1f311, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5dace6a3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@25a0761, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@649a727b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@57d21cd6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@236352a5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4dc6e0c9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3bcfd403, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@49682fa2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3d96b220
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@831a39a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@72ebd7a9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@599bd330
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@5462246
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@29cd434b.after() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@34f2d11a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@317e1d1e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4ea9b5f4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@67e8ce84
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@f75527, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6df773ef, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@10dc8850, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7e7944d5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4b963cd1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7472e41b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@22dde457, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@15ba1da3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6defc379, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3622916a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3da7d559
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@55a7e5ae
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@1d82e71
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@17d0fda9
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed authentication challenge on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.authenticated was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37dd1435.after() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@6c4ffdc7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@779e4b5e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@396645ac
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@69683ca4
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@57d3b0c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@afb05dd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@663df5cc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6dd45884, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@fff7a71, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4dbf98eb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5dd0942d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@28b04679, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4ce2c6cd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@406fa8ea
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5e307596
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@3f77fb29
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5e0a614c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7b79f4cf
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@11e8bec9.after() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@28ee1649
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@26f9279d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2f97c868
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@389ce1bb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@43a7d906, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@40993b9d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@c18e18d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@357ff62f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@63fba319, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1d90f197, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@16e4ffab, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@144d3f4b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@9f51be6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@509c79d4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@510276a4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@78bb3288
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@49f2bca4
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1420b939.after() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@1847d94f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@150bddfd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3e1b17d6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@64ba0274
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@51e26ce0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@685a101f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@70d898be, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1c141bd3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6c2ec80b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@734f81a9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@68c9b963, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@13aa4854, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@10728ce2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@69bcc736
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@33dff7ac
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@34fd57cf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@648ff236
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@2666eace
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@68e8dfb1.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3eb2492
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [a2921237-8e9d-4149-91ad-c5dccb744958]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@297de952
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@9611bc6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@466668f9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@6d75d78a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@1a871b47, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1c0fdfec, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@56360d58, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@76a6389f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1acf8b94, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2fd4af4c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3440bf1c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6c2e211, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6487cd8e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@71b0c171
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3ebcf313
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@66fa8492
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4915c20f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@33778c45
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1a7176e6.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@71b9574e
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [bd644c19-4e85-40b7-836c-152c6563f725]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@776c5d93
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@6b739b25
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@72ced13f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@680bb9fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2ad3c1ec, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@346082eb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2c332d2a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@53da3711, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1b556819, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4254f54, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2d7b15ec, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6bdc5047, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4d1a9ca3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@f93e3d0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@295ececc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@f5ac84c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@1113fd74
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3764d36e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@621a8a7a.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6815bc53
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [c141220d-0db8-4dfb-87d4-be6792502450]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3cd0db94
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@33fff0bd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@681622f6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@55179dd
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@26c0e0f3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@40f08565, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@6ec5cb31, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7b9f36c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@11c58239, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3de8754c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@686cf054, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4816505b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@30f5ab56, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@6ed485be
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2c5c1eea
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@53f1ab66
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@1f2be098
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@79a62b24
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@58f70a5.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@42e88383
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [08f7378d-1d34-40e7-864c-4182893b8064]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@52fe884e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@44a6e373
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@289eb63b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4bcdf052
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@13d66e72, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@62ed088a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@37cbcec3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@257380d3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@420eafda, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@523b3317, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2c97552e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@35955e1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5e15287e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@704cda78
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@41db0032
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@10e9f465
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6fac1b8f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@c458290
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5675d407.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@41cdda41
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [13b57af0-0033-49f7-9f7a-c4b8b2eb60a4]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@213b0eef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2c517df4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1a2434e7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3f0d3719
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@11db68d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@45bbe38d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@325861bf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@48795c6b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@17a299f9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@342ab68e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@60373f63, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4b22adee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@51c90acb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@7b93ae09
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5c082421
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1a7c21bb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4b8a8992
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@744df6fc
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@212ce10a.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3a3f275f
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [df78aa5f-b618-4226-a161-9e7c879b4420]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@572f7c3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3ee82600
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7b16ea43
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1d6e13d7
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2eb86778, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@4c910f3e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@477fd6b7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@19e9ad0d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c603dc5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@52776f7a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1f37dce2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@c868971, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@54a96023, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@29278640
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@17a41aba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@16d6b576
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6a2361b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@38e2a040
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5807cdd8.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [f5d92948-ae70-498d-89e4-3a66ada6445e]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@341fae71
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@bf59773
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@28aa0527
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3238584c
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@212f6fe9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@315c3b04, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@1e269ced, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@79089b11, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@23fcb72b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@245d7a82, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7515ff74, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@773654b9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@ff47ad4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@225ccee6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@17b791
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@151490a3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7923c824
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1c28f19e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@65faa5a9.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4561b2fb
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [99a6acb2-d170-4f37-a7c1-12f00b2eb569]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4a78b1f4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@39eb305e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7fb48906
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@1fe0d56a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@61db327f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@7dd06209, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7bd47d66, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3b74f30d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7b00f8f9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7cd9e285, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@44a6c9cc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@220a934a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@198b5948
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3fd5e2ae
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@73152e3f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@738f651f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@4b38117e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@60028b43.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@592b8d07
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [fcbc0cd1-b462-447e-91b3-adf0690385df]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@209a531c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@73c663fc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@65ce70c5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@544dc9ba
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@4981de30, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6d224703, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@65644dee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1c387843, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3f5f852e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1820af83, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@9e2cdd5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@9376005, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1280ecfd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@25591d82
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2a0bb92b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@67a9cb9d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3c76e596
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@21daf9dd
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@18442484.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@22e6874e
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [cda239a5-c743-4e82-9b00-4397958eb6f4]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@ab691c6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@581c63a8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2fd2d7c9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3b54e5a6
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7785b73c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6bc10171, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@4c45d8fb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7da86ddb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3cc48550, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@a0c665b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3413e584, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@64157d2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2bec9f33, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@10201107
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6bc137c7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5a352115
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@560f17f7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@78ee8544
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@12f8288e.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@46117487
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [178b8fb4-a054-4bcd-88fd-1509f825730b]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@20c2ba9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@6d06654b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3ee456d8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1019f2a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7dd43d9b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7918cba6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@4ae23d66, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4b2d19f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7e02856c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5785b615, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@b754997, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@41325e61, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@51d253b7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@612c1219
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@47a08f39
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@7e1b0beb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@21abb1fb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@f31e702
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@fff056c.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2e92a648
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [2b5bc52c-2430-433a-a643-e5a38f4bbbf7]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@180b2131
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2b0244c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7a1efaf4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7ede7cf
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@1591223f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6b5f6128, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@42e3c02a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@765d27b4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5dd9d721, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@8bae7aa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@26bf4e60, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@59b2947f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5b334bda, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3311b2c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@10a80d4e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@901846d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@429d14b9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@56bb9fd9
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7a4accb4.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@51ebdc1d
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [49ff2da5-fcf9-454d-9cc2-fb7b1578224c]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@69ed60dd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@5f72837f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@571737cd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3550a066
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@71856b6b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6e4f7806, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@23510a7e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1d87e84f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@45a4a9ae, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3d80023a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1f124d61, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6a962b36, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@28ef1ce5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@ba6ceb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5f243f31
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@44b0dac3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@36ea5b70
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@5419323a
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4a356220.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@47e9e334
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [d64091d1-1ae7-4492-a098-9df920598eb5]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-18T20:56:22.462+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@6796447f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3a6b22fa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4fc5690c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2973bbbe
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@14c4a1ea, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7962144c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@1622c7d6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@456dbdf4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@27d201c8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4c7305e4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1387e2f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3e4487e2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@535265e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@50f60379
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2a090d6e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@3850c651
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3f0c0cb9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@30176605
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/aalmiray/griffon2/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2cb10995.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4114c999
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [19c4c45a-72af-4e57-9368-dd60ce18aedd]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
]]></system-err>
</testsuite>
